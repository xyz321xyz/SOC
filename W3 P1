#include <iostream>
#include <algorithm>
#include <vector>
#include <unordered_map>

using namespace std;

void setDepth(const vector<int>& p, unordered_map<int, int>& depth, int start, int end, int level) {
    if (start > end) return;
    auto maxElementIter = max_element(p.begin() + start, p.begin() + end + 1);
    int maxIndex = distance(p.begin(), maxElementIter);
    depth[maxIndex] = level;
    setDepth(p, depth, start, maxIndex - 1, level + 1);
    setDepth(p, depth, maxIndex + 1, end, level + 1);
}

int main() {
    int t;
    cin >> t;
    for (int i = 0; i < t; i++) {
        int n;
        cin >> n;
        vector<int> p(n);
        for (int j = 0; j < n; j++) {
            cin >> p[j];
        }

        unordered_map<int, int> depth;
        setDepth(p, depth, 0, n - 1, 0);

        
        for (int j = 0; j < n; j++) {
            cout << depth[j] << " ";
        }
        cout << endl;
    }
    return 0;
}

