#include <iostream>
#include <vector>
#include <stack>
#include <algorithm>

using namespace std;

int largestRectangleArea(vector<int>& heights) {
    stack<int> s;
    int max_area = 0;
    int n = heights.size();

    for (int i = 0; i < n; ++i) {
        while (!s.empty() && heights[i] < heights[s.top()]) {
            int height = heights[s.top()];
            s.pop();
            int width = s.empty() ? i : i - s.top() - 1;
            max_area = max(max_area, height * width);
        }
        s.push(i);
    }

    while (!s.empty()) {
        int height = heights[s.top()];
        s.pop();
        int width = s.empty() ? n : n - s.top() - 1;
        max_area = max(max_area, height * width);
    }

    return max_area;
}

int main() {
    int t;
    cin >> t;
    while(t>0)
    {
    int n;
    cin >> n;
    if(n<=0) break;
    vector<int> height(n);
    for(int i=0; i<n; i++)
    {
        cin >> height[i];
    }
    cout << largestRectangleArea(height) << endl;
    t--;
    }
}
